/*!
 Material Components for the web
 Copyright (c) 2018 Google Inc.
 License: Apache-2.0
*/
@import url(https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css);:root {
    --mdc-theme-primary: #6200ee;
    --mdc-theme-primary-light: #b37eff;
    --mdc-theme-primary-dark: #8936ff;
    --mdc-theme-secondary: #018786;
    --mdc-theme-secondary-light: #02cecc;
    --mdc-theme-secondary-dark: #004040;
    --mdc-theme-background: #fff;
    --mdc-theme-text-primary-on-primary: white;
    --mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-primary-on-primary-light: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-primary-light: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-primary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-primary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-primary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-primary-dark: white;
    --mdc-theme-text-secondary-on-primary-dark: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-primary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-primary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-primary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-primary-on-secondary: white;
    --mdc-theme-text-secondary-on-secondary: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-secondary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-secondary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-secondary: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-primary-on-secondary-light: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-secondary-light: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-secondary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-secondary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-secondary-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-secondary-dark: white;
    --mdc-theme-text-secondary-on-secondary-dark: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-secondary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-secondary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-secondary-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-dark: white;
    --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }

.mdc-theme--background {
    /* @alternate */
    background-color: #fff;
    background-color: var(--mdc-theme-background, #fff); }

.mdc-theme--primary {
    /* @alternate */
    color: #6200ee !important;
    color: var(--mdc-theme-primary, #6200ee) !important; }

.mdc-theme--primary-light {
    /* @alternate */
    color: #b37eff !important;
    color: var(--mdc-theme-primary-light, #b37eff) !important; }

.mdc-theme--primary-dark {
    /* @alternate */
    color: #8936ff !important;
    color: var(--mdc-theme-primary-dark, #8936ff) !important; }

.mdc-theme--secondary {
    /* @alternate */
    color: #018786 !important;
    color: var(--mdc-theme-secondary, #018786) !important; }

.mdc-theme--secondary-light {
    /* @alternate */
    color: #02cecc !important;
    color: var(--mdc-theme-secondary-light, #02cecc) !important; }

.mdc-theme--secondary-dark {
    /* @alternate */
    color: #004040 !important;
    color: var(--mdc-theme-secondary-dark, #004040) !important; }

.mdc-theme--text-primary-on-primary {
    /* @alternate */
    color: white !important;
    color: var(--mdc-theme-text-primary-on-primary, white) !important; }

.mdc-theme--text-secondary-on-primary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7) !important;
    color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-primary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87) !important;
    color: var(--mdc-theme-text-primary-on-primary-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-primary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54) !important;
    color: var(--mdc-theme-text-secondary-on-primary-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-primary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-hint-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-primary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-disabled-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-primary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-icon-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-primary-dark {
    /* @alternate */
    color: white !important;
    color: var(--mdc-theme-text-primary-on-primary-dark, white) !important; }

.mdc-theme--text-secondary-on-primary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7) !important;
    color: var(--mdc-theme-text-secondary-on-primary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-hint-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-disabled-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-icon-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-secondary {
    /* @alternate */
    color: white !important;
    color: var(--mdc-theme-text-primary-on-secondary, white) !important; }

.mdc-theme--text-secondary-on-secondary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7) !important;
    color: var(--mdc-theme-text-secondary-on-secondary, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-secondary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-hint-on-secondary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-secondary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-disabled-on-secondary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-secondary {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-icon-on-secondary, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-secondary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87) !important;
    color: var(--mdc-theme-text-primary-on-secondary-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-secondary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54) !important;
    color: var(--mdc-theme-text-secondary-on-secondary-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-secondary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-hint-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-secondary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-disabled-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-secondary-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-icon-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-secondary-dark {
    /* @alternate */
    color: white !important;
    color: var(--mdc-theme-text-primary-on-secondary-dark, white) !important; }

.mdc-theme--text-secondary-on-secondary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7) !important;
    color: var(--mdc-theme-text-secondary-on-secondary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-secondary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-hint-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-secondary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-disabled-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-secondary-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-icon-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-background {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87) !important;
    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-background {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54) !important;
    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-background {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-background {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-background {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87) !important;
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54) !important;
    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-light {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38) !important;
    color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-dark {
    /* @alternate */
    color: white !important;
    color: var(--mdc-theme-text-primary-on-dark, white) !important; }

.mdc-theme--text-secondary-on-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.7) !important;
    color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-dark {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5) !important;
    color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--primary-bg {
    /* @alternate */
    background-color: #6200ee !important;
    background-color: var(--mdc-theme-primary, #6200ee) !important; }

.mdc-theme--primary-light-bg {
    /* @alternate */
    background-color: #b37eff !important;
    background-color: var(--mdc-theme-primary-light, #b37eff) !important; }

.mdc-theme--primary-dark-bg {
    /* @alternate */
    background-color: #8936ff !important;
    background-color: var(--mdc-theme-primary-dark, #8936ff) !important; }

.mdc-theme--secondary-bg {
    /* @alternate */
    background-color: #018786 !important;
    background-color: var(--mdc-theme-secondary, #018786) !important; }

.mdc-theme--secondary-light-bg {
    /* @alternate */
    background-color: #02cecc !important;
    background-color: var(--mdc-theme-secondary-light, #02cecc) !important; }

.mdc-theme--secondary-dark-bg {
    /* @alternate */
    background-color: #004040 !important;
    background-color: var(--mdc-theme-secondary-dark, #004040) !important; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-value(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-toolbar {
    /* @alternate */
    background-color: #6200ee;
    background-color: var(--mdc-theme-primary, #6200ee);
    color: white;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%; }
.mdc-toolbar__row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    height: auto;
    min-height: 64px; }
@media (max-width: 959px) and (orientation: landscape) {
    .mdc-toolbar__row {
        min-height: 48px; } }
@media (max-width: 599px) {
    .mdc-toolbar__row {
        min-height: 56px; } }
.mdc-toolbar__section {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    min-width: 0;
    height: 100%;
    z-index: 1; }
.mdc-toolbar__section--align-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1; }
.mdc-toolbar__section--align-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1; }
.mdc-toolbar__title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1.25rem;
    line-height: 2rem;
    font-weight: 500;
    letter-spacing: 0.02em;
    text-decoration: inherit;
    text-transform: inherit;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    margin-left: 24px;
    margin-right: 0;
    -ms-flex-item-align: center;
    align-self: center;
    padding: 16px 0;
    line-height: 1.5rem;
    z-index: 1; }
[dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] {
    margin-left: 0;
    margin-right: 24px; }
.mdc-toolbar__icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 16px;
    border: none;
    background-color: transparent;
    color: inherit;
    text-decoration: none;
    cursor: pointer;
    padding-right: 12px;
    padding-left: 12px; }
.mdc-toolbar__icon:last-of-type {
    padding-left: 12px;
    padding-right: 24px; }
[dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] {
    padding-left: 24px;
    padding-right: 12px; }
.mdc-toolbar__menu-icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 16px;
    border: none;
    background-color: transparent;
    color: inherit;
    text-decoration: none;
    cursor: pointer;
    padding-right: 24px;
    padding-left: 24px; }

.mdc-toolbar__menu-icon + .mdc-toolbar__title {
    margin-left: 8px;
    margin-right: 0; }
[dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] {
    margin-left: 0;
    margin-right: 8px; }

@media (max-width: 599px) {
    .mdc-toolbar__title {
        margin-left: 16px;
        margin-right: 0; }
    [dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] {
        margin-left: 0;
        margin-right: 16px; }
    .mdc-toolbar__icon {
        padding-right: 8px;
        padding-left: 8px; }
    .mdc-toolbar__icon:last-of-type {
        padding-left: 8px;
        padding-right: 16px; }
    [dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] {
        padding-left: 16px;
        padding-right: 8px; }
    .mdc-toolbar__menu-icon {
        padding-right: 16px;
        padding-left: 16px; }
    .mdc-toolbar__menu-icon + .mdc-toolbar__title {
        margin-left: 16px;
        margin-right: 0; }
    [dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] {
        margin-left: 0;
        margin-right: 16px; } }

.mdc-toolbar--fixed {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 4; }

.mdc-toolbar--flexible {
    --mdc-toolbar-ratio-to-extend-flexible: 4; }
.mdc-toolbar--flexible .mdc-toolbar__row:first-child {
    height: 256px;
    height: calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); }
@media (max-width: 599px) {
    .mdc-toolbar--flexible .mdc-toolbar__row:first-child {
        height: 224px;
        height: calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); } }
.mdc-toolbar--flexible .mdc-toolbar__row:first-child::after {
    position: absolute;
    content: ""; }
.mdc-toolbar--flexible-default-behavior .mdc-toolbar__title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 2.125rem;
    line-height: 2.5rem;
    font-weight: 400;
    letter-spacing: normal;
    text-decoration: inherit;
    text-transform: inherit;
    -ms-flex-item-align: end;
    align-self: flex-end;
    line-height: 1.5rem; }
.mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child::after {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-transition: opacity .2s ease;
    transition: opacity .2s ease;
    opacity: 1; }
.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child::after {
    opacity: 0; }
.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title {
    font-weight: 500; }

.mdc-toolbar--waterfall.mdc-toolbar--fixed {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    will-change: box-shadow; }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }

.mdc-toolbar-fixed-adjust {
    margin-top: 64px; }
@media (max-width: 959px) and (max-height: 599px) {
    .mdc-toolbar-fixed-adjust {
        margin-top: 48px; } }
@media (max-width: 599px) {
    .mdc-toolbar-fixed-adjust {
        margin-top: 56px; } }

.mdc-toolbar__section--shrink-to-fit {
    -webkit-box-flex: 0;
    -ms-flex: none;
    flex: none; }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-typography {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased; }

.mdc-typography--display4 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 7rem;
    line-height: 7rem;
    font-weight: 300;
    letter-spacing: -0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display4 {
    margin: -1rem 0 3.5rem -0.085em; }

.mdc-typography--display3 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 3.5rem;
    line-height: 3.5rem;
    font-weight: 400;
    letter-spacing: -0.02em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display3 {
    margin: -8px 0 64px -0.07em; }

.mdc-typography--display2 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 2.8125rem;
    line-height: 3rem;
    font-weight: 400;
    letter-spacing: normal;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display2 {
    margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--display1 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 2.125rem;
    line-height: 2.5rem;
    font-weight: 400;
    letter-spacing: normal;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display1 {
    margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--headline {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 400;
    letter-spacing: normal;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--headline {
    margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1.25rem;
    line-height: 2rem;
    font-weight: 500;
    letter-spacing: 0.02em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--title {
    margin: -0.5rem 0 1rem -0.05em; }

.mdc-typography--subheading2 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1rem;
    line-height: 1.75rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading2 {
    margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--subheading1 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.938rem;
    line-height: 1.5rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading1 {
    margin: -0.313rem 0 0.813rem -0.06em; }

.mdc-typography--body2 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 1.5rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body2 {
    margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--body1 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body1 {
    margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--caption {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.75rem;
    line-height: 1.25rem;
    font-weight: 400;
    letter-spacing: 0.08em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--caption {
    margin: -0.5rem 0 1rem -0.04em; }

.mdc-typography--button {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 2.25rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    text-decoration: none;
    text-transform: uppercase; }

.mdc-typography--adjust-margin.mdc-typography--button {
    margin: inherit; }

.demo-ready-detect {
    position: relative; }

fieldset {
    margin: 0;
    padding: 0;
    border: 0; }

.catalog-title {
    font-family: "Roboto Mono", monospace; }

.catalog-logo,
.catalog-back {
    padding-right: 24px;
    color: #eee;
    text-decoration: none; }

.hero {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    height: 360px;
    min-height: 360px;
    background-color: rgba(0, 0, 0, 0.05); }

section.example {
    margin: 24px;
    padding: 24px; }

section.example h2 {
    margin-left: 0; }

@-webkit-keyframes mdc-ripple-fg-radius-in {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
        transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }
    to {
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
        transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@keyframes mdc-ripple-fg-radius-in {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
        transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }
    to {
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
        transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@-webkit-keyframes mdc-ripple-fg-opacity-in {
    from {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        opacity: 0; }
    to {
        opacity: var(--mdc-ripple-fg-opacity, 0.16); } }

@keyframes mdc-ripple-fg-opacity-in {
    from {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        opacity: 0; }
    to {
        opacity: var(--mdc-ripple-fg-opacity, 0.16); } }

@-webkit-keyframes mdc-ripple-fg-opacity-out {
    from {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        opacity: var(--mdc-ripple-fg-opacity, 0.16); }
    to {
        opacity: 0; } }

@keyframes mdc-ripple-fg-opacity-out {
    from {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        opacity: var(--mdc-ripple-fg-opacity, 0.16); }
    to {
        opacity: 0; } }

.mdc-ripple-surface--test-edge-var-bug {
    --mdc-ripple-surface-test-edge-var: 1px solid #000;
    visibility: hidden; }
.mdc-ripple-surface--test-edge-var-bug::before {
    border: var(--mdc-ripple-surface-test-edge-var); }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-value(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-button {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 2.25rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    text-decoration: none;
    text-transform: uppercase;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    -webkit-tap-highlight-color: transparent;
    will-change: transform, opacity;
    display: inline-block;
    position: relative;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    min-width: 64px;
    height: 36px;
    padding: 0 16px;
    border: none;
    outline: none;
    text-align: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-appearance: none;
    overflow: hidden;
    vertical-align: middle;
    border-radius: 2px; }
.mdc-button::before, .mdc-button::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
.mdc-button::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
.mdc-button.mdc-ripple-upgraded::before {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));
    transform: scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-button.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-transform-origin: center center;
    transform-origin: center center; }
.mdc-button.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
.mdc-button.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
    animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
.mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
    animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-button::before, .mdc-button::after {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%; }
.mdc-button.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-button::-moz-focus-inner {
    padding: 0;
    border: 0; }
.mdc-button:active {
    outline: none; }
.mdc-button:hover {
    cursor: pointer; }
.mdc-button:disabled {
    background-color: transparent;
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
    cursor: default;
    pointer-events: none; }
.mdc-button:not(:disabled) {
    background-color: transparent; }
.mdc-button:not(:disabled) {
    /* @alternate */
    color: #6200ee;
    color: var(--mdc-theme-primary, #6200ee); }
.mdc-button::before, .mdc-button::after {
    /* @alternate */
    background-color: #6200ee; }
@supports not (-ms-ime-align: auto) {
    .mdc-button::before, .mdc-button::after {
        background-color: var(--mdc-theme-primary, #6200ee); } }
.mdc-button:hover::before {
    opacity: 0.04; }
.mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-button:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-button:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-button.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }

.mdc-button--raised:disabled,
.mdc-button--unelevated:disabled {
    background-color: rgba(0, 0, 0, 0.12);
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled) {
    /* @alternate */
    background-color: #6200ee; }
@supports not (-ms-ime-align: auto) {
    .mdc-button--raised:not(:disabled),
    .mdc-button--unelevated:not(:disabled) {
        background-color: var(--mdc-theme-primary, #6200ee); } }

.mdc-button--raised:not(:disabled),
.mdc-button--unelevated:not(:disabled) {
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-primary, white); }

.mdc-button--raised::before, .mdc-button--raised::after,
.mdc-button--unelevated::before,
.mdc-button--unelevated::after {
    /* @alternate */
    background-color: white; }
@supports not (-ms-ime-align: auto) {
    .mdc-button--raised::before, .mdc-button--raised::after,
    .mdc-button--unelevated::before,
    .mdc-button--unelevated::after {
        background-color: var(--mdc-theme-text-primary-on-primary, white); } }

.mdc-button--raised:hover::before,
.mdc-button--unelevated:hover::before {
    opacity: 0.08; }

.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,
.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.24; }

.mdc-button--raised:not(.mdc-ripple-upgraded)::after,
.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }

.mdc-button--raised:not(.mdc-ripple-upgraded):active::after,
.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.32; }

.mdc-button--raised.mdc-ripple-upgraded,
.mdc-button--unelevated.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.32; }

.mdc-button--raised {
    -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); }
.mdc-button--raised:hover, .mdc-button--raised:focus {
    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
.mdc-button--raised:active {
    -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }
.mdc-button--raised:disabled {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }

.mdc-button--stroked {
    border-style: solid;
    padding-right: 14px;
    padding-left: 14px;
    border-width: 2px;
    line-height: 32px; }
.mdc-button--stroked:disabled {
    /* @alternate */
    border-color: rgba(0, 0, 0, 0.38);
    border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-button--stroked.mdc-button--dense {
    line-height: 27px; }
.mdc-button--stroked.mdc-button--compact {
    padding-right: 6px;
    padding-left: 6px; }
.mdc-button--stroked:not(:disabled) {
    /* @alternate */
    border-color: #6200ee;
    border-color: var(--mdc-theme-primary, #6200ee); }

.mdc-button--compact {
    padding: 0 8px; }

.mdc-button--dense {
    height: 32px;
    font-size: .8125rem;
    line-height: 32px; }

.mdc-button__icon {
    display: inline-block;
    width: 18px;
    height: 18px;
    margin-right: 8px;
    font-size: 18px;
    line-height: inherit;
    vertical-align: top; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-value(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
.mdc-card {
    /* @alternate */
    background-color: #fff;
    background-color: var(--mdc-theme-background, #fff);
    border-radius: 2px;
    -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }

.mdc-card--stroked {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    border: 1px solid #dbdbdb; }

.mdc-card__media {
    position: relative;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    background-repeat: no-repeat;
    background-size: cover; }
.mdc-card__media::before {
    display: block;
    content: ""; }

.mdc-card__media:first-child {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit; }

.mdc-card__media:last-child {
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit; }

.mdc-card__media--square::before {
    margin-top: 100%; }

.mdc-card__media--16-9::before {
    margin-top: 56.25%; }

.mdc-card__media-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }

.mdc-card__actions {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    min-height: 52px;
    padding: 8px; }

.mdc-card__actions--full-bleed {
    padding: 0; }

.mdc-card__action-buttons,
.mdc-card__action-icons {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }

.mdc-card__action-icons {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end; }

.mdc-card__action-buttons + .mdc-card__action-icons {
    margin-left: 16px;
    margin-right: 0; }
[dir="rtl"] .mdc-card__action-buttons + .mdc-card__action-icons, .mdc-card__action-buttons + .mdc-card__action-icons[dir="rtl"] {
    margin-left: 0;
    margin-right: 16px; }

.mdc-card__action {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    min-width: auto;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
.mdc-card__action:focus {
    outline: none; }

.mdc-card__action--button {
    margin-left: 0;
    margin-right: 8px;
    padding: 0 8px; }
[dir="rtl"] .mdc-card__action--button, .mdc-card__action--button[dir="rtl"] {
    margin-left: 8px;
    margin-right: 0; }
.mdc-card__action--button:last-child {
    margin-left: 0;
    margin-right: 0; }
[dir="rtl"] .mdc-card__action--button:last-child, .mdc-card__action--button:last-child[dir="rtl"] {
    margin-left: 0;
    margin-right: 0; }

.mdc-card__actions--full-bleed .mdc-card__action--button {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    width: 100%;
    height: auto;
    max-height: none;
    margin: 0;
    padding: 8px 16px;
    text-align: left; }
[dir="rtl"] .mdc-card__actions--full-bleed .mdc-card__action--button, .mdc-card__actions--full-bleed .mdc-card__action--button[dir="rtl"] {
    text-align: right; }

.mdc-card__action--icon {
    margin: -6px 0;
    padding: 12px; }

.mdc-card__action--icon:not(:disabled) {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)); }

/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
@-webkit-keyframes mdc-checkbox-unchecked-checked-checkmark-path {
    0%,
    50% {
        stroke-dashoffset: 29.78334; }
    50% {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
    100% {
        stroke-dashoffset: 0; } }
@keyframes mdc-checkbox-unchecked-checked-checkmark-path {
    0%,
    50% {
        stroke-dashoffset: 29.78334; }
    50% {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
    100% {
        stroke-dashoffset: 0; } }

@-webkit-keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {
    0%,
    68.2% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0); }
    68.2% {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);
        animation-timing-function: cubic-bezier(0, 0, 0, 1); }
    100% {
        -webkit-transform: scaleX(1);
        transform: scaleX(1); } }

@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {
    0%,
    68.2% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0); }
    68.2% {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);
        animation-timing-function: cubic-bezier(0, 0, 0, 1); }
    100% {
        -webkit-transform: scaleX(1);
        transform: scaleX(1); } }

@-webkit-keyframes mdc-checkbox-checked-unchecked-checkmark-path {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
        animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
        opacity: 1;
        stroke-dashoffset: 0; }
    to {
        opacity: 0;
        stroke-dashoffset: -29.78334; } }

@keyframes mdc-checkbox-checked-unchecked-checkmark-path {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
        animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
        opacity: 1;
        stroke-dashoffset: 0; }
    to {
        opacity: 0;
        stroke-dashoffset: -29.78334; } }

@-webkit-keyframes mdc-checkbox-checked-indeterminate-checkmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; }
    to {
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
        opacity: 0; } }

@keyframes mdc-checkbox-checked-indeterminate-checkmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; }
    to {
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
        opacity: 0; } }

@-webkit-keyframes mdc-checkbox-indeterminate-checked-checkmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
        opacity: 0; }
    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
        opacity: 1; } }

@keyframes mdc-checkbox-indeterminate-checked-checkmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
        opacity: 0; }
    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
        opacity: 1; } }

@-webkit-keyframes mdc-checkbox-checked-indeterminate-mixedmark {
    from {
        -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;
        animation-timing-function: mdc-animation-deceleration-curve-timing-function;
        -webkit-transform: rotate(-45deg);
        transform: rotate(-45deg);
        opacity: 0; }
    to {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; } }

@keyframes mdc-checkbox-checked-indeterminate-mixedmark {
    from {
        -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;
        animation-timing-function: mdc-animation-deceleration-curve-timing-function;
        -webkit-transform: rotate(-45deg);
        transform: rotate(-45deg);
        opacity: 0; }
    to {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; } }

@-webkit-keyframes mdc-checkbox-indeterminate-checked-mixedmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; }
    to {
        -webkit-transform: rotate(315deg);
        transform: rotate(315deg);
        opacity: 0; } }

@keyframes mdc-checkbox-indeterminate-checked-mixedmark {
    from {
        -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        animation-timing-function: cubic-bezier(0.14, 0, 0, 1);
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1; }
    to {
        -webkit-transform: rotate(315deg);
        transform: rotate(315deg);
        opacity: 0; } }

@-webkit-keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {
    0% {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        -webkit-transform: scaleX(1);
        transform: scaleX(1);
        opacity: 1; }
    32.8%,
    100% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
        opacity: 0; } }

@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {
    0% {
        -webkit-animation-timing-function: linear;
        animation-timing-function: linear;
        -webkit-transform: scaleX(1);
        transform: scaleX(1);
        opacity: 1; }
    32.8%,
    100% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
        opacity: 0; } }

.mdc-checkbox {
    display: inline-block;
    position: relative;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 18px;
    flex: 0 0 18px;
    -webkit-box-sizing: content-box;
    box-sizing: content-box;
    width: 18px;
    height: 18px;
    padding: 11px;
    line-height: 0;
    white-space: nowrap;
    cursor: pointer;
    vertical-align: bottom;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    -webkit-tap-highlight-color: transparent;
    will-change: transform, opacity; }
.mdc-checkbox::before, .mdc-checkbox::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
.mdc-checkbox::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
.mdc-checkbox.mdc-ripple-upgraded::before {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));
    transform: scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-checkbox.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-transform-origin: center center;
    transform-origin: center center; }
.mdc-checkbox.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
.mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
    animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
.mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
    animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-checkbox::before, .mdc-checkbox::after {
    /* @alternate */
    background-color: #018786; }
@supports not (-ms-ime-align: auto) {
    .mdc-checkbox::before, .mdc-checkbox::after {
        background-color: var(--mdc-theme-secondary, #018786); } }
.mdc-checkbox:hover::before {
    opacity: 0.04; }
.mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-checkbox:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-checkbox:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-checkbox.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
.mdc-checkbox::before, .mdc-checkbox::after {
    top: calc(50% - 50%);
    left: calc(50% - 50%);
    width: 100%;
    height: 100%; }
.mdc-checkbox.mdc-ripple-upgraded::before, .mdc-checkbox.mdc-ripple-upgraded::after {
    top: var(--mdc-ripple-top, calc(50% - 50%));
    left: var(--mdc-ripple-left, calc(50% - 50%));
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-checkbox.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }

.mdc-checkbox__checkmark-path {
    stroke: white !important; }

.mdc-checkbox__mixedmark {
    background-color: white; }

.mdc-checkbox__background::before {
    /* @alternate */
    background-color: #018786; }
@supports not (-ms-ime-align: auto) {
    .mdc-checkbox__background::before {
        background-color: var(--mdc-theme-secondary, #018786); } }

.mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: rgba(0, 0, 0, 0.54);
    background-color: transparent; }

.mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background {
    /* @alternate */
    border-color: #018786;
    border-color: var(--mdc-theme-secondary, #018786);
    /* @alternate */
    background-color: #018786;
    background-color: var(--mdc-theme-secondary, #018786); }

@-webkit-keyframes mdc-checkbox-fade-in-background-0 {
    0% {
        border-color: rgba(0, 0, 0, 0.54);
        background-color: transparent; }
    50% {
        /* @alternate */
        border-color: #018786;
        border-color: var(--mdc-theme-secondary, #018786);
        /* @alternate */
        background-color: #018786;
        background-color: var(--mdc-theme-secondary, #018786); } }

@keyframes mdc-checkbox-fade-in-background-0 {
    0% {
        border-color: rgba(0, 0, 0, 0.54);
        background-color: transparent; }
    50% {
        /* @alternate */
        border-color: #018786;
        border-color: var(--mdc-theme-secondary, #018786);
        /* @alternate */
        background-color: #018786;
        background-color: var(--mdc-theme-secondary, #018786); } }

@-webkit-keyframes mdc-checkbox-fade-out-background-0 {
    0%, 80% {
        /* @alternate */
        border-color: #018786;
        border-color: var(--mdc-theme-secondary, #018786);
        /* @alternate */
        background-color: #018786;
        background-color: var(--mdc-theme-secondary, #018786); }
    100% {
        border-color: rgba(0, 0, 0, 0.54);
        background-color: transparent; } }

@keyframes mdc-checkbox-fade-out-background-0 {
    0%, 80% {
        /* @alternate */
        border-color: #018786;
        border-color: var(--mdc-theme-secondary, #018786);
        /* @alternate */
        background-color: #018786;
        background-color: var(--mdc-theme-secondary, #018786); }
    100% {
        border-color: rgba(0, 0, 0, 0.54);
        background-color: transparent; } }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-in-background-0;
    animation-name: mdc-checkbox-fade-in-background-0; }

.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {
    -webkit-animation-name: mdc-checkbox-fade-out-background-0;
    animation-name: mdc-checkbox-fade-out-background-0; }

.mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    border-color: rgba(0, 0, 0, 0.26); }

.mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background {
    border-color: transparent;
    background-color: rgba(0, 0, 0, 0.26); }

.mdc-checkbox--disabled {
    cursor: default;
    pointer-events: none; }

.mdc-checkbox__background {
    left: 11px;
    right: initial;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    position: absolute;
    top: 11px;
    bottom: 0;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 45%;
    height: 45%;
    -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    border: 2px solid currentColor;
    border-radius: 2px;
    background-color: transparent;
    pointer-events: none;
    will-change: background-color, border-color; }
.mdc-checkbox[dir="rtl"] .mdc-checkbox__background,
[dir="rtl"] .mdc-checkbox .mdc-checkbox__background {
    left: initial;
    right: 11px; }

.mdc-checkbox__checkmark {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    opacity: 0; }
.mdc-checkbox--upgraded .mdc-checkbox__checkmark {
    opacity: 1; }

.mdc-checkbox__checkmark-path {
    -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    stroke-width: 3.12px;
    stroke-dashoffset: 29.78334;
    stroke-dasharray: 29.78334; }

.mdc-checkbox__mixedmark {
    width: 100%;
    height: 2px;
    -webkit-transform: scaleX(0) rotate(0deg);
    transform: scaleX(0) rotate(0deg);
    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    opacity: 0; }

.mdc-checkbox--upgraded .mdc-checkbox__background,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark,
.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,
.mdc-checkbox--upgraded .mdc-checkbox__mixedmark {
    -webkit-transition: none !important;
    transition: none !important; }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background, .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {
    -webkit-animation-duration: 180ms;
    animation-duration: 180ms;
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear; }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path {
    -webkit-animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;
    animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark {
    -webkit-animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;
    animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path {
    -webkit-animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;
    animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark {
    -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;
    animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark {
    -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;
    animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark {
    -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;
    animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark {
    -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;
    animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark {
    -webkit-animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;
    animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;
    -webkit-transition: none;
    transition: none; }

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,
.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {
    -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark-path,
.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark-path {
    stroke-dashoffset: 0; }

.mdc-checkbox__background::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-transform: scale(0, 0);
    transform: scale(0, 0);
    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: "";
    will-change: opacity, transform; }

.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before {
    content: none; }

.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before {
    -webkit-transform: scale(2.75, 2.75);
    transform: scale(2.75, 2.75);
    -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
    opacity: 0.26; }

.mdc-checkbox__native-control {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    opacity: 0;
    cursor: inherit; }
.mdc-checkbox__native-control:disabled {
    cursor: default;
    pointer-events: none; }

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark {
    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
    opacity: 1; }

.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {
    -webkit-transform: scaleX(1) rotate(-45deg);
    transform: scaleX(1) rotate(-45deg); }

.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark {
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
    opacity: 0; }

.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {
    -webkit-transform: scaleX(1) rotate(0deg);
    transform: scaleX(1) rotate(0deg);
    opacity: 1; }

/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* stylelint-disable selector-max-type */
.mdc-form-field {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    vertical-align: middle; }
.mdc-form-field > label {
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
    margin-right: auto;
    padding-left: 4px; }
[dir="rtl"] .mdc-form-field > label, .mdc-form-field[dir="rtl"] > label {
    margin-left: auto;
    padding-right: 4px; }

.mdc-form-field--align-end > label {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
    margin-left: auto;
    padding-right: 4px; }

[dir="rtl"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir="rtl"] > label {
    margin-right: auto;
    padding-left: 4px; }

/* stylelint-enable selector-max-type */
/** postcss-bem-linter: define icon-toggle */
.mdc-icon-toggle {
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    -webkit-tap-highlight-color: transparent;
    will-change: transform, opacity;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 48px;
    height: 48px;
    padding: 12px;
    outline: none;
    font-size: 1.5rem;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    will-change: initial; }
.mdc-icon-toggle::before, .mdc-icon-toggle::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
.mdc-icon-toggle::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
.mdc-icon-toggle.mdc-ripple-upgraded::before {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));
    transform: scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-icon-toggle.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-transform-origin: center center;
    transform-origin: center center; }
.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
    animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
    animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-icon-toggle::before, .mdc-icon-toggle::after {
    top: calc(50% - 50%);
    left: calc(50% - 50%);
    width: 100%;
    height: 100%; }
.mdc-icon-toggle.mdc-ripple-upgraded::before, .mdc-icon-toggle.mdc-ripple-upgraded::after {
    top: var(--mdc-ripple-top, calc(50% - 50%));
    left: var(--mdc-ripple-left, calc(50% - 50%));
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-icon-toggle.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-icon-toggle::before, .mdc-icon-toggle::after {
    background-color: black; }
.mdc-icon-toggle:hover::before {
    opacity: 0.04; }
.mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-icon-toggle:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-icon-toggle.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
.mdc-icon-toggle::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }

.mdc-icon-toggle--disabled {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
    pointer-events: none; }

/** postcss-bem-linter: end */
/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/**
 * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
.mdc-list {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1rem;
    line-height: 1.75rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
    margin: 0;
    padding: 8px 0;
    line-height: 1.5rem;
    list-style-type: none; }

.mdc-list-item__secondary-text {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }

.mdc-list-item__graphic {
    background-color: transparent; }

.mdc-list-item__graphic {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)); }

.mdc-list-item__meta {
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }

.mdc-list--dense {
    padding-top: 4px;
    padding-bottom: 4px;
    font-size: .812rem; }

.mdc-list-item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    height: 48px;
    padding: 0 16px;
    overflow: hidden; }
.mdc-list-item:focus {
    outline: none; }

.mdc-list-item--selected,
.mdc-list-item--activated {
    /* @alternate */
    color: #6200ee;
    color: var(--mdc-theme-primary, #6200ee); }
.mdc-list-item--selected .mdc-list-item__graphic,
.mdc-list-item--activated .mdc-list-item__graphic {
    /* @alternate */
    color: #6200ee;
    color: var(--mdc-theme-primary, #6200ee); }

.mdc-list-item__graphic {
    margin-left: 0;
    margin-right: 32px;
    width: 24px;
    height: 24px;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center; }
.mdc-list-item[dir="rtl"] .mdc-list-item__graphic,
[dir="rtl"] .mdc-list-item .mdc-list-item__graphic {
    margin-left: 32px;
    margin-right: 0; }

.mdc-list-item__meta {
    margin-left: auto;
    margin-right: 0; }
.mdc-list-item[dir="rtl"] .mdc-list-item__meta,
[dir="rtl"] .mdc-list-item .mdc-list-item__meta {
    margin-left: 0;
    margin-right: auto; }

.mdc-list-item__text,
.mdc-list-item__secondary-text {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    display: block; }

.mdc-list-item__secondary-text {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit; }

.mdc-list--dense .mdc-list-item__secondary-text {
    font-size: inherit; }

.mdc-list--dense .mdc-list-item {
    height: 40px; }

.mdc-list--dense .mdc-list-item__graphic {
    margin-left: 0;
    margin-right: 36px;
    width: 20px;
    height: 20px; }
.mdc-list-item[dir="rtl"] .mdc-list--dense .mdc-list-item__graphic,
[dir="rtl"] .mdc-list-item .mdc-list--dense .mdc-list-item__graphic {
    margin-left: 36px;
    margin-right: 0; }

.mdc-list--avatar-list .mdc-list-item {
    height: 56px; }

.mdc-list--avatar-list .mdc-list-item__graphic {
    margin-left: 0;
    margin-right: 16px;
    width: 40px;
    height: 40px;
    border-radius: 50%; }
.mdc-list-item[dir="rtl"] .mdc-list--avatar-list .mdc-list-item__graphic,
[dir="rtl"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__graphic {
    margin-left: 16px;
    margin-right: 0; }

:not(.mdc-list--non-interactive) > .mdc-list-item {
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    -webkit-tap-highlight-color: transparent;
    will-change: transform, opacity; }
:not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
:not(.mdc-list--non-interactive) > .mdc-list-item::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::before {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));
    transform: scale(var(--mdc-ripple-fg-scale, 1)); }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-transform-origin: center center;
    transform-origin: center center; }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
    animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
    animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
:not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%; }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
:not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {
    background-color: black; }
:not(.mdc-list--non-interactive) > .mdc-list-item:hover::before {
    opacity: 0.04; }
:not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
:not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
:not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
:not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated::before {
    opacity: 0.12; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated::after {
    /* @alternate */
    background-color: #6200ee; }
@supports not (-ms-ime-align: auto) {
    :not(.mdc-list--non-interactive) > .mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated::after {
        background-color: var(--mdc-theme-primary, #6200ee); } }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated:hover::before {
    opacity: 0.16; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.24; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.28; }
:not(.mdc-list--non-interactive) > .mdc-list-item--activated.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.28; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected::before {
    opacity: 0.04; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected::after {
    /* @alternate */
    background-color: #6200ee; }
@supports not (-ms-ime-align: auto) {
    :not(.mdc-list--non-interactive) > .mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected::after {
        background-color: var(--mdc-theme-primary, #6200ee); } }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected:hover::before {
    opacity: 0.08; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.2; }
:not(.mdc-list--non-interactive) > .mdc-list-item--selected.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.2; }

.mdc-list--two-line .mdc-list-item {
    height: 72px; }

.mdc-list--two-line.mdc-list--dense .mdc-list-item {
    height: 60px; }

.mdc-list--avatar-list.mdc-list--dense .mdc-list-item {
    height: 48px; }

.mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {
    margin-left: 0;
    margin-right: 20px;
    width: 36px;
    height: 36px; }
.mdc-list-item[dir="rtl"] .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic,
[dir="rtl"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {
    margin-left: 20px;
    margin-right: 0; }

a.mdc-list-item {
    color: inherit;
    text-decoration: none; }

.mdc-list-divider {
    height: 0;
    margin: 0;
    border: none;
    border-bottom-width: 1px;
    border-bottom-style: solid; }

.mdc-list-divider {
    border-bottom-color: rgba(0, 0, 0, 0.12); }

.mdc-list-divider--padded {
    margin: 0 16px; }

.mdc-list-divider--inset {
    margin-left: 72px;
    margin-right: 0;
    width: calc(100% - 72px); }
.mdc-list-group[dir="rtl"] .mdc-list-divider--inset,
[dir="rtl"] .mdc-list-group .mdc-list-divider--inset {
    margin-left: 0;
    margin-right: 72px; }

.mdc-list-divider--inset.mdc-list-divider--padded {
    width: calc(100% - 72px - 16px); }

.mdc-list-group .mdc-list {
    padding: 0; }

.mdc-list-group__subheader {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    line-height: 1.5rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    text-decoration: inherit;
    text-transform: inherit;
    margin: 0.75rem 16px; }

.mdc-list-group__subheader {
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }

.mdc-ripple-surface {
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    -webkit-tap-highlight-color: transparent;
    will-change: transform, opacity;
    position: relative;
    outline: none;
    overflow: hidden; }
.mdc-ripple-surface::before, .mdc-ripple-surface::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
.mdc-ripple-surface::before {
    -webkit-transition: opacity 15ms linear;
    transition: opacity 15ms linear; }
.mdc-ripple-surface.mdc-ripple-upgraded::before {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));
    transform: scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-ripple-surface.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-transform-origin: center center;
    transform-origin: center center; }
.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top, 0);
    left: var(--mdc-ripple-left, 0); }
.mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;
    animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }
.mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;
    animation: 150ms mdc-ripple-fg-opacity-out;
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-ripple-surface::before, .mdc-ripple-surface::after {
    background-color: black; }
.mdc-ripple-surface:hover::before {
    opacity: 0.04; }
.mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-ripple-surface:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-ripple-surface.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
.mdc-ripple-surface::before, .mdc-ripple-surface::after {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%; }
.mdc-ripple-surface.mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-ripple-surface[data-mdc-ripple-is-unbounded] {
    overflow: visible; }
.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::before, .mdc-ripple-surface[data-mdc-ripple-is-unbounded]::after {
    top: calc(50% - 50%);
    left: calc(50% - 50%);
    width: 100%;
    height: 100%; }
.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::before, .mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after {
    top: var(--mdc-ripple-top, calc(50% - 50%));
    left: var(--mdc-ripple-left, calc(50% - 50%));
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after {
    width: var(--mdc-ripple-fg-size, 100%);
    height: var(--mdc-ripple-fg-size, 100%); }
.mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {
    /* @alternate */
    background-color: #6200ee; }
@supports not (-ms-ime-align: auto) {
    .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {
        background-color: var(--mdc-theme-primary, #6200ee); } }
.mdc-ripple-surface--primary:hover::before {
    opacity: 0.04; }
.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }
.mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {
    /* @alternate */
    background-color: #018786; }
@supports not (-ms-ime-align: auto) {
    .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {
        background-color: var(--mdc-theme-secondary, #018786); } }
.mdc-ripple-surface--accent:hover::before {
    opacity: 0.04; }
.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.12; }
.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded)::after {
    -webkit-transition: opacity 150ms linear;
    transition: opacity 150ms linear; }
.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 75ms;
    transition-duration: 75ms;
    opacity: 0.16; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded {
    --mdc-ripple-fg-opacity: 0.16; }

.hero {
    height: auto;
    padding: 24px; }

.demo-card-collection {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 0 24px; }

.demo-card-toggles {
    margin: 24px;
    padding: 24px;
    text-align: center; }

.demo-card {
    width: 350px;
    margin: 48px; }

.demo-card--photo {
    width: 200px; }

.demo-card__media {
    background-image: url("/images/1-1.jpg"); }

.demo-card__media--16-9 {
    background-image: url("/images/16-9.jpg"); }

.demo-card__media-content--with-title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end; }

.demo-card__media-title {
    padding: 8px 16px;
    background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(0, 0, 0, 0.5)));
    background-image: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    color: white; }

.demo-card__primary {
    padding: 1rem; }

.demo-card__title {
    margin: 0; }

.demo-card__subtitle {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));
    margin: 0; }

.demo-card__secondary {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));
    padding: 0 1rem 8px 1rem; }

.demo-card-article-group-heading {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));
    padding: 8px 16px; }

.demo-card-article {
    padding: 16px;
    text-decoration: none;
    color: inherit; }

.demo-card-article__title {
    margin: 0 0 4px 0; }

.demo-card-article__snippet {
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));
    margin: 0; }

.demo-card--music {
    border-radius: 24px 4px; }
[dir="rtl"] .demo-card--music, .demo-card--music[dir="rtl"] {
    border-radius: 4px 24px; }

.demo-card__music-row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    border-top-left-radius: inherit; }
[dir="rtl"] .demo-card__music-row, .demo-card__music-row[dir="rtl"] {
    border-top-left-radius: 0;
    border-top-right-radius: inherit; }

.demo-card__media--music {
    width: 110px;
    border-top-left-radius: inherit; }
[dir="rtl"] .demo-card__media--music, .demo-card__media--music[dir="rtl"] {
    border-top-left-radius: 0;
    border-top-right-radius: inherit; }

.demo-card__music-info {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding: 8px 16px; }

.demo-card__action-buttons--text-only {
    margin-left: 8px; }

.demo-card__action-icon--star {
    margin-left: 4px;
    margin-right: 4px;
    cursor: pointer; }
